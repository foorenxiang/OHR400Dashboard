Last login: Tue Apr 14 12:48:14 on ttys003
(base) Ren-Xiangs-MBP-2017:OHR400Dashboard foorx$ rlwrap q FASMLTrainingClientInit.q 
KDB+ 3.6 2019.08.20 Copyright (C) 1993-2019 Kx Systems
m64/ 4()core 16384MB foorx ren-xiangs-mbp-2017.local 127.0.0.1 EXPIRE 2020.10.02 foorenxiang@gmail.com KOD #5001568

"Using embedPy release version 1.3.2"
"Using ML toolkit from commit 51b1995"
Loading init.q
Loading util/init.q
Loading util/util.q
Loading util/metrics.q
Loading util/preproc.q
Loading fresh/init.q
Loading fresh/extract.q
Loading util/mproc.q
Loading fresh/select.q
Loading xval/init.q
Loading xval/xval.q
Loading util/mproc.q
Loading util/pickle.q
"Machine Learning toolkit loaded"
"Q ML Training Client Process running on port 6001 [websocket mode]"
KDB+ 3.6 2019.08.20 Copyright (C) 1993-2019 Kx Systems
m64/ 4()core 16384MB foorx ren-xiangs-mbp-2017.local 127.0.0.1 EXPIRE 2020.10.02 foorenxiang@gmail.com KOD #5001568

'-c
Using TensorFlow backend.
"Enabling immediate mode for Garbage Collection"
"Rolling Launch Control Model Trainer Up and Ready"
"Not using train test split!"
"Training GPS speed prediction model"
Training using KDB+ input!
Using PCA!
principalComponents:
[[ 5.27553694e-02 -1.20308989e-02 -1.00388481e-03 -6.49056537e-02
  -3.78870709e-02  1.30318813e-01  4.17927770e-01 -2.57898103e-01
  -6.61420894e-02 -2.78750065e-02  1.12331551e-01 -1.99629051e-01
   3.76117189e-02 -2.50787305e-02  3.94488944e-01  4.19371652e-01
   4.14718178e-01  4.12448922e-01]
 [ 3.65593242e-03  4.14678247e-03  4.42154417e-02  4.67189673e-01
  -2.29939709e-03 -3.86057784e-01  9.69767804e-02 -5.27593261e-02
   4.64908722e-01 -7.58497046e-03 -4.13401606e-01  4.80809918e-02
  -4.11874364e-01  1.46446048e-01  1.61666250e-01  3.95107110e-02
   2.73869342e-02  9.78259947e-02]
 [-4.39263086e-02  4.09163966e-03 -3.63903461e-02 -1.97235126e-02
  -6.63063416e-01 -1.05130485e-01 -4.06855409e-02  4.71514642e-03
  -6.02650000e-03 -6.49992884e-01 -1.07661588e-01 -2.95809042e-01
   8.08330921e-02 -9.71501417e-02 -4.15169492e-02 -3.76732238e-02
  -5.20363174e-02 -2.26602221e-02]
 [-6.95889443e-01  6.96107043e-01 -1.02920972e-01  5.77600948e-03
   1.33370910e-02  4.95770432e-02  2.12039751e-02 -2.67075946e-02
   1.08930959e-02 -1.21889250e-02  4.12957510e-02  3.63415358e-02
  -1.49335239e-02  1.08432417e-01  1.73764749e-02  2.71777982e-02
   1.83286262e-02  9.88560302e-03]
 [ 2.86259675e-02 -6.39462203e-02  2.88021767e-01 -1.05492136e-01
  -1.18145860e-01 -1.72455096e-02 -1.06940307e-03 -3.08095354e-01
  -9.08454872e-02 -1.98502206e-01 -3.76609304e-02  5.08942144e-01
   1.85435851e-01  6.63782431e-01 -4.00184838e-02  4.80340320e-02
   5.91798766e-02 -3.64075266e-02]
 [-6.91949645e-02  1.39340591e-01  8.77575199e-01 -3.43175506e-02
   2.05362465e-02 -1.15317512e-01 -8.63117758e-03 -8.77968111e-02
  -3.67503611e-02  5.57553403e-02 -9.09640977e-02 -2.83782118e-02
   8.29308423e-02 -3.97040636e-01 -1.49301090e-04 -4.74245087e-02
  -2.01043111e-02  4.76085218e-02]
 [ 4.86574703e-02  9.17492430e-02 -3.41692990e-01 -1.25291488e-01
   4.75418060e-02 -4.75790643e-01 -1.11348427e-02 -3.61044576e-01
  -1.33371438e-01  1.07363659e-01 -3.61350516e-01  2.09319517e-01
   3.94256132e-01 -3.33872069e-01 -1.12654903e-01  4.54095771e-02
   1.10744980e-01 -4.30399009e-03]
 [ 1.50744864e-01  1.77660490e-01  4.15209464e-02 -1.20248967e-01
  -3.08076770e-02 -1.94107094e-01  1.31683475e-01  8.13504246e-01
  -1.19087648e-01 -5.76161896e-02 -1.60165600e-01  2.52771422e-01
   1.32024546e-01  4.95403449e-02  3.65222789e-02  1.49990280e-01
   1.96207218e-01  1.50038983e-01]
 [ 2.37632547e-01  2.11370593e-01 -9.52643688e-02  1.30076146e-01
  -1.77586396e-01  2.43969132e-01  2.18254967e-02 -9.55915839e-02
   1.22919762e-01 -1.75670726e-01  2.61564155e-01  6.38515229e-01
  -2.36041061e-01 -4.31982581e-01  6.26035129e-02  1.18210996e-03
  -4.35023763e-02  4.42923134e-02]]
Number of hidden layers: 1
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 2
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 3
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 4
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 5
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 6
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 7
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 8
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 9
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 10
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 11
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 12
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 13
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 14
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 15
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 16
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 17
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 18
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 19
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 20
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)


Testing all kernels...
['default', 'tanh', 'tribas', 'hardlim', 'rbf(0.1)']

Layer: 1
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
12306.327079968865
RMSE:
110.93
Testing kernel: tribas
MSE:
12478.991666124
RMSE:
111.71
Testing kernel: hardlim
MSE:
12413.251048288012
RMSE:
111.41
Testing kernel: rbf(0.1)
MSE:
12410.735609093254
RMSE:
111.40

Layer: 2
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
12957.025740264162
RMSE:
113.83
Testing kernel: tribas
MSE:
12046.130808454018
RMSE:
109.75
Testing kernel: hardlim
MSE:
13169.499848444922
RMSE:
114.76
Testing kernel: rbf(0.1)
MSE:
11988.324763557608
RMSE:
109.49

Layer: 3
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
12565.517400807084
RMSE:
112.10
Testing kernel: tribas
MSE:
12398.289841372814
RMSE:
111.35
Testing kernel: hardlim
MSE:
12707.007842275123
RMSE:
112.73
Testing kernel: rbf(0.1)
MSE:
11638.348259173023
RMSE:
107.88

Layer: 4
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
12876.719062562837
RMSE:
113.48
Testing kernel: tribas
MSE:
11325.034027249541
RMSE:
106.42
Testing kernel: hardlim
MSE:
12341.926320464008
RMSE:
111.09
Testing kernel: rbf(0.1)
MSE:
11302.55506216164
RMSE:
106.31

Layer: 5
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
11975.228446390278
RMSE:
109.43
Testing kernel: tribas
MSE:
12169.150804889674
RMSE:
110.31
Testing kernel: hardlim
MSE:
12018.146442449108
RMSE:
109.63
Testing kernel: rbf(0.1)
MSE:
11231.195318060338
RMSE:
105.98

Layer: 6
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
12349.343727057292
RMSE:
111.13
Testing kernel: tribas
MSE:
12626.62856798159
RMSE:
112.37
Testing kernel: hardlim
MSE:
12201.367035883504
RMSE:
110.46
Testing kernel: rbf(0.1)
MSE:
11156.404042957602
RMSE:
105.62

Layer: 7
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
10857.534578869228
RMSE:
104.20
Testing kernel: tribas
MSE:
12761.895584916634
RMSE:
112.97
Testing kernel: hardlim
MSE:
11262.843737513713
RMSE:
106.13
Testing kernel: rbf(0.1)
MSE:
11151.987400496933
RMSE:
105.60

Layer: 8
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
12074.978562584396
RMSE:
109.89
Testing kernel: tribas
MSE:
12106.07136358668
RMSE:
110.03
Testing kernel: hardlim
MSE:
11929.764198656265
RMSE:
109.22
Testing kernel: rbf(0.1)
MSE:
10990.547201282558
RMSE:
104.84

Layer: 9
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
11839.250670698724
RMSE:
108.81
Testing kernel: tribas
MSE:
12673.908922010069
RMSE:
112.58
Testing kernel: hardlim
MSE:
11793.278364887761
RMSE:
108.60
Testing kernel: rbf(0.1)
MSE:
11024.567283278657
RMSE:
105.00

Layer: 10
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
12117.471329886805
RMSE:
110.08
Testing kernel: tribas
MSE:
12358.23291049149
RMSE:
111.17
Testing kernel: hardlim
MSE:
12337.369500834575
RMSE:
111.07
Testing kernel: rbf(0.1)
MSE:
11014.234043026041
RMSE:
104.95

Layer: 11
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
11535.815434876038
RMSE:
107.40
Testing kernel: tribas
MSE:
12628.410061920444
RMSE:
112.38
Testing kernel: hardlim
MSE:
12304.973387586931
RMSE:
110.93
Testing kernel: rbf(0.1)
MSE:
10979.809243729214
RMSE:
104.78

Layer: 12
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
11209.69453025852
RMSE:
105.88
Testing kernel: tribas
MSE:
12632.347637711726
RMSE:
112.39
Testing kernel: hardlim
MSE:
11558.524099475026
RMSE:
107.51
Testing kernel: rbf(0.1)
MSE:
11290.280015248736
RMSE:
106.26

Layer: 13
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
11729.9696236306
RMSE:
108.30
Testing kernel: tribas
MSE:
12532.78098666094
RMSE:
111.95
Testing kernel: hardlim
MSE:
12024.413196747973
RMSE:
109.66
Testing kernel: rbf(0.1)
MSE:
11305.966773335194
RMSE:
106.33

Layer: 14
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
11726.407742474095
RMSE:
108.29
Testing kernel: tribas
MSE:
12294.729523436885
RMSE:
110.88
Testing kernel: hardlim
MSE:
11687.37876155944
RMSE:
108.11
Testing kernel: rbf(0.1)
MSE:
11343.104240436747
RMSE:
106.50

Layer: 15
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
11692.121233393154
RMSE:
108.13
Testing kernel: tribas
MSE:
12484.84167757906
RMSE:
111.74
Testing kernel: hardlim
MSE:
11621.48619869399
RMSE:
107.80
Testing kernel: rbf(0.1)
MSE:
11484.677124155864
RMSE:
107.17

Layer: 16
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
11861.987088422462
RMSE:
108.91
Testing kernel: tribas
MSE:
11726.634188762955
RMSE:
108.29
Testing kernel: hardlim
MSE:
12142.813476187106
RMSE:
110.19
Testing kernel: rbf(0.1)
MSE:
11468.892285261554
RMSE:
107.09

Layer: 17
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
10686.850738356357
RMSE:
103.38
Testing kernel: tribas
MSE:
11692.706326407379
RMSE:
108.13
Testing kernel: hardlim
MSE:
10858.58762730591
RMSE:
104.20
Testing kernel: rbf(0.1)
MSE:
11449.801536370955
RMSE:
107.00

Layer: 18
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
11967.67135340842
RMSE:
109.40
Testing kernel: tribas
MSE:
12151.94459751575
RMSE:
110.24
Testing kernel: hardlim
MSE:
11878.52917944354
RMSE:
108.99
Testing kernel: rbf(0.1)
MSE:
11619.31054850193
RMSE:
107.79

Layer: 19
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
11581.887568546479
RMSE:
107.62
Testing kernel: tribas
MSE:
11778.452353882794
RMSE:
108.53
Testing kernel: hardlim
MSE:
11933.372913418136
RMSE:
109.24
Testing kernel: rbf(0.1)
MSE:
11608.987118498724
RMSE:
107.75

Layer: 20
Testing kernel: default
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tanh
MSE:
11196.081015250362
RMSE:
105.81
Testing kernel: tribas
MSE:
12450.765363826295
RMSE:
111.58
Testing kernel: hardlim
MSE:
11357.863046211109
RMSE:
106.57
Testing kernel: rbf(0.1)
MSE:
11396.204050488448
RMSE:
106.75
Optimal model:
ELMRegressor(hidden_layer=SimpleRandomHiddenLayer(activation_args=None,
                                                  activation_func='tanh',
                                                  n_hidden=20, random_state=0),
             regressor=None)
bestHiddenLayerCount:
1
MSE: 11196.08
RMSE: 105.81
"GPS Speed Training"
"***************Objects in python globals***************"
dict_keys(['__name__', '__doc__', '__package__', '__loader__', '__spec__', '__annotations__', '__builtins__', 'qclosure', 'itertools', 'np', 'pd', 'math', 'PCA', 'gp', 'Sequential', 'Dense', 'LSTM', 'StandardScaler', 'dump', 'load', 'trainingDataPDF', 'sys', 'plt', 'train_test_split', 'LogisticRegression', 'ELMRegressor', 'RBFRandomHiddenLayer', 'SimpleRandomHiddenLayer', 'csvTrainingData', 'fileName', 'trainingSetName', 'comments', 'mse', 'rmse', 'strFloat', 'kdbSource', 'trainPercentage', 'trainingDataTrain', 'trainingDataTest', 'trainX', 'trainXStandardScalar', 'yStandardScalar', 'trainy', 'testX', 'testXStandardScalar', 'testy', 'usePCA', 'covarianceExplanation', 'pcaModel', 'principalComponents', 'allTrainedELMModels', 'maxHiddenLayers', 'kernel_names', 'model_names', 'numHiddenLayers', 'sinsq', 'srhl_sinsq', 'srhl_tanh', 'srhl_tribas', 'srhl_hardlim', 'srhl_rbf', 'log_reg', 'regressors', 'TrainedELMModels', 'modeltype', 'model_name', 'kernel_name', 'model', 'bestHiddenLayerCount', 'bestModel', 'bestModelName', 'bestMSE', 'bestPrediction', 'savedGPSSpeedModel', 'RMSElist', 'hiddenLayerAndKernelRMSEs', 'y_pred', 'MSE', 'RMSE', 'improvement', 'modelSave', 'showPlots'])
"***************Objects in python globals***************"
"Current memory usage"
used| 1335392
heap| 67108864
peak| 67108864
wmax| 0
mmap| 146
mphy| 17179869184
syms| 1416
symw| 80026
"Running garbage collection"
"Memory usage after garbage collection"
used| 1335392
heap| 67108864
peak| 67108864
wmax| 0
mmap| 146
mphy| 17179869184
syms| 1416
symw| 80026
"Training LiPo Voltage prediction model"
Training using KDB+ input!
Using PCA!
Number of hidden layers: 1
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 2
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 3
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 4
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 5
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 6
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 7
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 8
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 9
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 10
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 11
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 12
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 13
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 14
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 15
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 16
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 17
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 18
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 19
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)

Number of hidden layers: 20
Training kernel: default
Training kernel: tanh
Training kernel: tribas
Training kernel: hardlim
Training kernel: rbf(0.1)


Testing all kernels...
['default', 'tanh', 'tribas', 'hardlim', 'rbf(0.1)']

Layer: 1
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.008340212421815462
RMSE:
0.09
Testing kernel: tribas
MSE:
0.010054436227264405
RMSE:
0.10
Testing kernel: hardlim
MSE:
0.008789757304862955
RMSE:
0.09
Testing kernel: rbf(0.1)
MSE:
0.00671679752213046
RMSE:
0.08

Layer: 2
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.008719535858123153
RMSE:
0.09
Testing kernel: tribas
MSE:
0.011235096347215532
RMSE:
0.11
Testing kernel: hardlim
MSE:
0.007082767923803898
RMSE:
0.08
Testing kernel: rbf(0.1)
MSE:
0.005107889312059155
RMSE:
0.07

Layer: 3
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.009092485567374275
RMSE:
0.10
Testing kernel: tribas
MSE:
0.010050191934232035
RMSE:
0.10
Testing kernel: hardlim
MSE:
0.0072736757503889795
RMSE:
0.09
Testing kernel: rbf(0.1)
MSE:
0.006624158999081241
RMSE:
0.08

Layer: 4
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.007711780120180016
RMSE:
0.09
Testing kernel: tribas
MSE:
0.010896793031866137
RMSE:
0.10
Testing kernel: hardlim
MSE:
0.008181713522765175
RMSE:
0.09
Testing kernel: rbf(0.1)
MSE:
0.007363708680133789
RMSE:
0.09

Layer: 5
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.010484790491321802
RMSE:
0.10
Testing kernel: tribas
MSE:
0.010015861702230143
RMSE:
0.10
Testing kernel: hardlim
MSE:
0.010716823785557555
RMSE:
0.10
Testing kernel: rbf(0.1)
MSE:
0.00746118989198871
RMSE:
0.09

Layer: 6
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.008142524718495832
RMSE:
0.09
Testing kernel: tribas
MSE:
0.01029589257687178
RMSE:
0.10
Testing kernel: hardlim
MSE:
0.006852348529127349
RMSE:
0.08
Testing kernel: rbf(0.1)
MSE:
0.00726382780992683
RMSE:
0.09

Layer: 7
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.006559020138309905
RMSE:
0.08
Testing kernel: tribas
MSE:
0.010511450539379371
RMSE:
0.10
Testing kernel: hardlim
MSE:
0.008639227829379103
RMSE:
0.09
Testing kernel: rbf(0.1)
MSE:
0.008429222965457929
RMSE:
0.09

Layer: 8
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.009700074844818442
RMSE:
0.10
Testing kernel: tribas
MSE:
0.010791360211509752
RMSE:
0.10
Testing kernel: hardlim
MSE:
0.00871615950431552
RMSE:
0.09
Testing kernel: rbf(0.1)
MSE:
0.008658482068894633
RMSE:
0.09

Layer: 9
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.008794006518654583
RMSE:
0.09
Testing kernel: tribas
MSE:
0.01223197383084715
RMSE:
0.11
Testing kernel: hardlim
MSE:
0.009219113735219598
RMSE:
0.10
Testing kernel: rbf(0.1)
MSE:
0.008497427454891597
RMSE:
0.09

Layer: 10
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.009880487990431364
RMSE:
0.10
Testing kernel: tribas
MSE:
0.01008425601107829
RMSE:
0.10
Testing kernel: hardlim
MSE:
0.009608917409580331
RMSE:
0.10
Testing kernel: rbf(0.1)
MSE:
0.008582573868489396
RMSE:
0.09

Layer: 11
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.011687072027931086
RMSE:
0.11
Testing kernel: tribas
MSE:
0.01254811215864995
RMSE:
0.11
Testing kernel: hardlim
MSE:
0.010914234575073404
RMSE:
0.10
Testing kernel: rbf(0.1)
MSE:
0.008053521995034264
RMSE:
0.09

Layer: 12
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.010246203488978377
RMSE:
0.10
Testing kernel: tribas
MSE:
0.00927938056501957
RMSE:
0.10
Testing kernel: hardlim
MSE:
0.00995690745768611
RMSE:
0.10
Testing kernel: rbf(0.1)
MSE:
0.01005885524951372
RMSE:
0.10

Layer: 13
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.00808150496854094
RMSE:
0.09
Testing kernel: tribas
MSE:
0.011496532870014764
RMSE:
0.11
Testing kernel: hardlim
MSE:
0.007906806756372746
RMSE:
0.09
Testing kernel: rbf(0.1)
MSE:
0.009857989643128017
RMSE:
0.10

Layer: 14
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.00952859448415776
RMSE:
0.10
Testing kernel: tribas
MSE:
0.012718477348411384
RMSE:
0.11
Testing kernel: hardlim
MSE:
0.010301943169661957
RMSE:
0.10
Testing kernel: rbf(0.1)
MSE:
0.009476281606977496
RMSE:
0.10

Layer: 15
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.00678638090377573
RMSE:
0.08
Testing kernel: tribas
MSE:
0.011695330151543963
RMSE:
0.11
Testing kernel: hardlim
MSE:
0.007047702964007257
RMSE:
0.08
Testing kernel: rbf(0.1)
MSE:
0.009780838596736941
RMSE:
0.10

Layer: 16
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.00673906153062235
RMSE:
0.08
Testing kernel: tribas
MSE:
0.01121810909094482
RMSE:
0.11
Testing kernel: hardlim
MSE:
0.008096185285640664
RMSE:
0.09
Testing kernel: rbf(0.1)
MSE:
0.009839881385316388
RMSE:
0.10

Layer: 17
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.011293934775806402
RMSE:
0.11
Testing kernel: tribas
MSE:
0.012307152011267912
RMSE:
0.11
Testing kernel: hardlim
MSE:
0.009390412429158584
RMSE:
0.10
Testing kernel: rbf(0.1)
MSE:
0.00975722059320396
RMSE:
0.10

Layer: 18
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.006580076873631921
RMSE:
0.08
Testing kernel: tribas
MSE:
0.013444228855435458
RMSE:
0.12
Testing kernel: hardlim
MSE:
0.007752898680324918
RMSE:
0.09
Testing kernel: rbf(0.1)
MSE:
0.010366436811605461
RMSE:
0.10

Layer: 19
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.008362648707786762
RMSE:
0.09
Testing kernel: tribas
MSE:
0.010435881564459532
RMSE:
0.10
Testing kernel: hardlim
MSE:
0.007006268453487026
RMSE:
0.08
Testing kernel: rbf(0.1)
MSE:
0.010257734132388575
RMSE:
0.10

Layer: 20
Testing kernel: default
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tanh
MSE:
0.00793552351574802
RMSE:
0.09
Testing kernel: tribas
MSE:
0.012229487602526888
RMSE:
0.11
Testing kernel: hardlim
MSE:
0.008587694210201169
RMSE:
0.09
Testing kernel: rbf(0.1)
MSE:
0.010559095230887713
RMSE:
0.10
Optimal model:
ELMRegressor(hidden_layer=RBFRandomHiddenLayer(activation_args=None,
                                               activation_func='gaussian',
                                               centers=None, gamma=0.1,
                                               n_hidden=4, radii=None,
                                               random_state=0,
                                               use_exemplars=False),
             regressor=None)
bestHiddenLayerCount:
2
MSE: 0.01
RMSE: 0.07
"LiPo Voltage Training"
"***************Objects in python globals***************"
dict_keys(['__name__', '__doc__', '__package__', '__loader__', '__spec__', '__annotations__', '__builtins__', 'qclosure', 'itertools', 'np', 'pd', 'math', 'PCA', 'gp', 'Sequential', 'Dense', 'LSTM', 'StandardScaler', 'dump', 'load', 'trainingDataPDF', 'sys', 'plt', 'train_test_split', 'LogisticRegression', 'ELMRegressor', 'RBFRandomHiddenLayer', 'SimpleRandomHiddenLayer', 'csvTrainingData', 'fileName', 'trainingSetName', 'comments', 'mse', 'rmse', 'strFloat', 'kdbSource', 'trainPercentage', 'trainingDataTrain', 'trainingDataTest', 'trainX', 'trainXStandardScalar', 'yStandardScalar', 'trainy', 'testX', 'testXStandardScalar', 'testy', 'usePCA', 'covarianceExplanation', 'pcaModel', 'principalComponents', 'allTrainedELMModels', 'maxHiddenLayers', 'kernel_names', 'model_names', 'numHiddenLayers', 'sinsq', 'srhl_sinsq', 'srhl_tanh', 'srhl_tribas', 'srhl_hardlim', 'srhl_rbf', 'log_reg', 'regressors', 'TrainedELMModels', 'modeltype', 'model_name', 'kernel_name', 'model', 'bestHiddenLayerCount', 'bestModel', 'bestModelName', 'bestMSE', 'bestPrediction', 'savedGPSSpeedModel', 'RMSElist', 'hiddenLayerAndKernelRMSEs', 'y_pred', 'MSE', 'RMSE', 'improvement', 'modelSave', 'showPlots', 'savedLiPoVoltageModel'])
"***************Objects in python globals***************"
"Current memory usage"
used| 1335520
heap| 67108864
peak| 67108864
wmax| 0
mmap| 146
mphy| 17179869184
syms| 1417
symw| 80106
"Running garbage collection"
"Memory usage after garbage collection"
used| 1335520
heap| 67108864
peak| 67108864
wmax| 0
mmap| 146
mphy| 17179869184
syms| 1417
symw| 80106
"Deploying GPS speed prediction model"
Using ELM GPS Model
Predicting GPS Speed using KDB+ input!
throttleInputRange
[2000, 1900, 1800, 1700, 1600, 1500, 1400, 1300, 1200, 1100, 1000]
Using PCA!
gpsPredictionPDF set
prediction complete!
19001 4241776
"First GPS speed prediction"
"***************Objects in python globals***************"
dict_keys(['__name__', '__doc__', '__package__', '__loader__', '__spec__', '__annotations__', '__builtins__', 'qclosure', 'itertools', 'np', 'pd', 'math', 'PCA', 'gp', 'Sequential', 'Dense', 'LSTM', 'StandardScaler', 'dump', 'load', 'trainingDataPDF', 'sys', 'plt', 'train_test_split', 'LogisticRegression', 'ELMRegressor', 'RBFRandomHiddenLayer', 'SimpleRandomHiddenLayer', 'csvTrainingData', 'fileName', 'trainingSetName', 'comments', 'mse', 'rmse', 'strFloat', 'kdbSource', 'trainPercentage', 'trainingDataTrain', 'trainingDataTest', 'trainX', 'trainXStandardScalar', 'yStandardScalar', 'trainy', 'testX', 'testXStandardScalar', 'testy', 'usePCA', 'covarianceExplanation', 'pcaModel', 'principalComponents', 'allTrainedELMModels', 'maxHiddenLayers', 'kernel_names', 'model_names', 'numHiddenLayers', 'sinsq', 'srhl_sinsq', 'srhl_tanh', 'srhl_tribas', 'srhl_hardlim', 'srhl_rbf', 'log_reg', 'regressors', 'TrainedELMModels', 'modeltype', 'model_name', 'kernel_name', 'model', 'bestHiddenLayerCount', 'bestModel', 'bestModelName', 'bestMSE', 'bestPrediction', 'savedGPSSpeedModel', 'RMSElist', 'hiddenLayerAndKernelRMSEs', 'y_pred', 'MSE', 'RMSE', 'improvement', 'modelSave', 'showPlots', 'savedLiPoVoltageModel', 'numSamplesToUse', 'synthesizedSampleIndex', 'inputPDF', 'trainingDataPDFNotFound', 'lowThrottle', 'highThrottle', 'throttleSteps', 'steps', 'throttleInputRange', 'tempPDF', 'x', 'y', 'inputPDFStandardScalar', 'tempInputPDF', 'gpsSpeedPrediction', 'gpsPredictionPDF', 'throttleInputSequence', 'synthesizedSampleIndexRef'])
"***************Objects in python globals***************"
"Current memory usage"
used| 6841296
heap| 67108864
peak| 67108864
wmax| 0
mmap| 146
mphy| 17179869184
syms| 1435
symw| 80808
"Running garbage collection"
"Memory usage after garbage collection"
used| 6841296
heap| 67108864
peak| 67108864
wmax| 0
mmap| 146
mphy| 17179869184
syms| 1435
symw| 80808
"Deploying LiPo Voltage prediction model"
Using ELM LiPo Model
Predicting LiPo Voltage using KDB+ input!
throttleInputRange
[2000, 1900, 1800, 1700, 1600, 1500, 1400, 1300, 1200, 1100, 1000]
Using PCA!
LiPoPredictionPDF set
prediction complete!
17931 4241344
"First LiPo Voltage Prediction"
"***************Objects in python globals***************"
dict_keys(['__name__', '__doc__', '__package__', '__loader__', '__spec__', '__annotations__', '__builtins__', 'qclosure', 'itertools', 'np', 'pd', 'math', 'PCA', 'gp', 'Sequential', 'Dense', 'LSTM', 'StandardScaler', 'dump', 'load', 'trainingDataPDF', 'sys', 'plt', 'train_test_split', 'LogisticRegression', 'ELMRegressor', 'RBFRandomHiddenLayer', 'SimpleRandomHiddenLayer', 'csvTrainingData', 'fileName', 'trainingSetName', 'comments', 'mse', 'rmse', 'strFloat', 'kdbSource', 'trainPercentage', 'trainingDataTrain', 'trainingDataTest', 'trainX', 'trainXStandardScalar', 'yStandardScalar', 'trainy', 'testX', 'testXStandardScalar', 'testy', 'usePCA', 'covarianceExplanation', 'pcaModel', 'principalComponents', 'allTrainedELMModels', 'maxHiddenLayers', 'kernel_names', 'model_names', 'numHiddenLayers', 'sinsq', 'srhl_sinsq', 'srhl_tanh', 'srhl_tribas', 'srhl_hardlim', 'srhl_rbf', 'log_reg', 'regressors', 'TrainedELMModels', 'modeltype', 'model_name', 'kernel_name', 'model', 'bestHiddenLayerCount', 'bestModel', 'bestModelName', 'bestMSE', 'bestPrediction', 'savedGPSSpeedModel', 'RMSElist', 'hiddenLayerAndKernelRMSEs', 'y_pred', 'MSE', 'RMSE', 'improvement', 'modelSave', 'showPlots', 'savedLiPoVoltageModel', 'numSamplesToUse', 'synthesizedSampleIndex', 'inputPDF', 'trainingDataPDFNotFound', 'lowThrottle', 'highThrottle', 'throttleSteps', 'steps', 'throttleInputRange', 'tempPDF', 'x', 'y', 'inputPDFStandardScalar', 'tempInputPDF', 'gpsSpeedPrediction', 'gpsPredictionPDF', 'throttleInputSequence', 'synthesizedSampleIndexRef', 'LiPoPrediction', 'LiPoPredictionPDF'])
"***************Objects in python globals***************"
"Current memory usage"
used| 12347040
heap| 67108864
peak| 67108864
wmax| 0
mmap| 146
mphy| 17179869184
syms| 1438
symw| 80971
"Running garbage collection"
"Memory usage after garbage collection"
used| 12347040
heap| 67108864
peak| 67108864
wmax| 0
mmap| 146
mphy| 17179869184
syms| 1438
symw| 80971
"Parameters for data synthesis:"
"lowThrottle"
1000
"highThrottle"
2000
"throttleSteps"
10
"Synthesizing GPS speeds and LiPo voltage for different throttle values and t..
"Generating timestep sample 2"
Using ELM GPS Model
Predicting GPS Speed using KDB+ input!
throttleInputRange
[2000, 1900, 1800, 1700, 1600, 1500, 1400, 1300, 1200, 1100, 1000]
Using PCA!
gpsPredictionPDF set
prediction complete!
138847 4241776
"Synthesize GPS speed"
"***************Objects in python globals***************"
dict_keys(['__name__', '__doc__', '__package__', '__loader__', '__spec__', '__annotations__', '__builtins__', 'qclosure', 'itertools', 'np', 'pd', 'math', 'PCA', 'gp', 'Sequential', 'Dense', 'LSTM', 'StandardScaler', 'dump', 'load', 'trainingDataPDF', 'sys', 'plt', 'train_test_split', 'LogisticRegression', 'ELMRegressor', 'RBFRandomHiddenLayer', 'SimpleRandomHiddenLayer', 'csvTrainingData', 'fileName', 'trainingSetName', 'comments', 'mse', 'rmse', 'strFloat', 'kdbSource', 'trainPercentage', 'trainingDataTrain', 'trainingDataTest', 'trainX', 'trainXStandardScalar', 'yStandardScalar', 'trainy', 'testX', 'testXStandardScalar', 'testy', 'usePCA', 'covarianceExplanation', 'pcaModel', 'principalComponents', 'allTrainedELMModels', 'maxHiddenLayers', 'kernel_names', 'model_names', 'numHiddenLayers', 'sinsq', 'srhl_sinsq', 'srhl_tanh', 'srhl_tribas', 'srhl_hardlim', 'srhl_rbf', 'log_reg', 'regressors', 'TrainedELMModels', 'modeltype', 'model_name', 'kernel_name', 'model', 'bestHiddenLayerCount', 'bestModel', 'bestModelName', 'bestMSE', 'bestPrediction', 'savedGPSSpeedModel', 'RMSElist', 'hiddenLayerAndKernelRMSEs', 'y_pred', 'MSE', 'RMSE', 'improvement', 'modelSave', 'showPlots', 'savedLiPoVoltageModel', 'numSamplesToUse', 'synthesizedSampleIndex', 'inputPDF', 'trainingDataPDFNotFound', 'lowThrottle', 'highThrottle', 'throttleSteps', 'steps', 'throttleInputRange', 'tempPDF', 'x', 'y', 'inputPDFStandardScalar', 'tempInputPDF', 'gpsSpeedPrediction', 'gpsPredictionPDF', 'throttleInputSequence', 'synthesizedSampleIndexRef', 'LiPoPrediction', 'LiPoPredictionPDF', 'syntheticSampleTimeDelta'])
"***************Objects in python globals***************"
"Current memory usage"
used| 25541856
heap| 67108864
peak| 67108864
wmax| 0
mmap| 146
mphy| 17179869184
syms| 1453
symw| 81675
"Running garbage collection"
"Memory usage after garbage collection"
used| 25541856
heap| 67108864
peak| 67108864
wmax| 0
mmap| 146
mphy| 17179869184
syms| 1453
symw| 81675
Using ELM LiPo Model
Predicting LiPo Voltage using KDB+ input!
throttleInputRange
[2000, 1900, 1800, 1700, 1600, 1500, 1400, 1300, 1200, 1100, 1000]
Using PCA!
LiPoPredictionPDF set
prediction complete!
324500 4241472
"Synthesize voltage"
"***************Objects in python globals***************"
dict_keys(['__name__', '__doc__', '__package__', '__loader__', '__spec__', '__annotations__', '__builtins__', 'qclosure', 'itertools', 'np', 'pd', 'math', 'PCA', 'gp', 'Sequential', 'Dense', 'LSTM', 'StandardScaler', 'dump', 'load', 'trainingDataPDF', 'sys', 'plt', 'train_test_split', 'LogisticRegression', 'ELMRegressor', 'RBFRandomHiddenLayer', 'SimpleRandomHiddenLayer', 'csvTrainingData', 'fileName', 'trainingSetName', 'comments', 'mse', 'rmse', 'strFloat', 'kdbSource', 'trainPercentage', 'trainingDataTrain', 'trainingDataTest', 'trainX', 'trainXStandardScalar', 'yStandardScalar', 'trainy', 'testX', 'testXStandardScalar', 'testy', 'usePCA', 'covarianceExplanation', 'pcaModel', 'principalComponents', 'allTrainedELMModels', 'maxHiddenLayers', 'kernel_names', 'model_names', 'numHiddenLayers', 'sinsq', 'srhl_sinsq', 'srhl_tanh', 'srhl_tribas', 'srhl_hardlim', 'srhl_rbf', 'log_reg', 'regressors', 'TrainedELMModels', 'modeltype', 'model_name', 'kernel_name', 'model', 'bestHiddenLayerCount', 'bestModel', 'bestModelName', 'bestMSE', 'bestPrediction', 'savedGPSSpeedModel', 'RMSElist', 'hiddenLayerAndKernelRMSEs', 'y_pred', 'MSE', 'RMSE', 'improvement', 'modelSave', 'showPlots', 'savedLiPoVoltageModel', 'numSamplesToUse', 'synthesizedSampleIndex', 'inputPDF', 'trainingDataPDFNotFound', 'lowThrottle', 'highThrottle', 'throttleSteps', 'steps', 'throttleInputRange', 'tempPDF', 'x', 'y', 'inputPDFStandardScalar', 'tempInputPDF', 'gpsSpeedPrediction', 'gpsPredictionPDF', 'throttleInputSequence', 'synthesizedSampleIndexRef', 'LiPoPrediction', 'LiPoPredictionPDF', 'syntheticSampleTimeDelta'])
"***************Objects in python globals***************"
"Current memory usage"
used| 4649353024
heap| 4697620480
peak| 4697620480
wmax| 0
mmap| 146
mphy| 17179869184
syms| 1455
symw| 81781
"Running garbage collection"
"Memory usage after garbage collection"
used| 4649353024
heap| 4697620480
peak| 4697620480
wmax| 0
mmap| 146
mphy| 17179869184
syms| 1455
symw| 81781
Sample gpsSpeedPredictionTableRowCount LiPoPredictionTableRowCount
------------------------------------------------------------------
0      17567                           17567                      
1      35134                           35134                      
"Generating timestep sample 3"
Using ELM GPS Model
Predicting GPS Speed using KDB+ input!
throttleInputRange
[2000, 1900, 1800, 1700, 1600, 1500, 1400, 1300, 1200, 1100, 1000]

